name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]
  schedule:
    - cron: '0 0 * * 0'  # Weekly security scan

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov mypy bandit safety pytest-benchmark memory_profiler
        pip install -r requirements.txt
        
    - name: Security check dependencies
      run: safety check
        
    - name: Security check code
      run: bandit -r src -c pyproject.toml
        
    - name: Lint with flake8
      run: |
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src --count --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Type check with mypy
      run: |
        mypy src
        
    - name: Run tests with coverage
      run: |
        pytest --cov=src --cov-report=xml --benchmark-only
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Memory profiling
      run: |
        python -m memory_profiler -o memory_profile.log tests/test_image_processing.py
        
    - name: Upload memory profile
      uses: actions/upload-artifact@v3
      with:
        name: memory-profile
        path: memory_profile.log

    - name: Notify Discord on Success
      if: success()
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        title: "‚úÖ CI Passed - HelixZone"
        description: |
          **Build Status:** Success! üéâ
          **Branch:** ${{ github.ref_name }}
          **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          **OS:** ${{ matrix.os }}
          **Python:** ${{ matrix.python-version }}
          
          **Test Results:**
          - All tests passed
          - Coverage report uploaded
          - Memory profile generated
          
          [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        color: 0x28A745
        username: "HelixZone CI"
        avatar_url: "https://github.com/HelixProtocol/HelixZone/raw/main/assets/logo.png"

    - name: Notify Discord on Failure
      if: failure()
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        title: "‚ùå CI Failed - HelixZone"
        description: |
          **Build Status:** Failed ‚ùå
          **Branch:** ${{ github.ref_name }}
          **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          **OS:** ${{ matrix.os }}
          **Python:** ${{ matrix.python-version }}
          
          Please check the logs for more details:
          [View Error Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        color: 0xDC3545
        username: "HelixZone CI"
        avatar_url: "https://github.com/HelixProtocol/HelixZone/raw/main/assets/logo.png"

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'release' && github.event.action == 'created'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: HelixZone.AppImage
            asset_name: HelixZone-linux.AppImage
          - os: windows-latest
            artifact_name: HelixZone.exe
            asset_name: HelixZone-windows.exe
          - os: macos-latest
            artifact_name: HelixZone.dmg
            asset_name: HelixZone-macos.dmg

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed --name HelixZone src/helixzone/main.py
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream

    - name: Notify Discord on Release
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        title: "üöÄ New Release Built"
        description: |
          Version: ${{ github.ref }}
          Platform: ${{ matrix.os }}
        color: 0x17A2B8

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Notify Discord on Security Issues
      if: failure()
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        title: "üö® Security Issues Found"
        description: "CodeQL analysis found potential security issues."
        color: 0xDC3545 